---
layout:     post
title:      "尾声 2020"
subtitle:   " \"步履不辍, 且行且歌\""
date:       2020-11-24 12:00:00
author:     "Vincent"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - 生活
    - Meta
---

> “第一次写博客好紧张哦~ ”

Vincent 的 Blog 就这么波澜不惊地于2020年年底开通了。
<br>(#掌声掌声 #鲜花鲜花)

[跳过废话，直接看技术 ](#build) 



## 正文

在如今朋友圈/微博/ins成为主流媒体的时代，写博客看上去实在是一个很 old-school/文青 的行为。然而我写blog的动力则源于以下几点：

**1. 练习技术的工具**

前段时间一直在家里用很old-school的方法学习 HTML/CSS/JS 等基础的前端知识。基本上就是在重复着上网找资源(例如[**W3School.com**](https://www.w3schools.com/))，读资源，读完资源做个小project，这样的无尽循环。这种学习方法实属无聊且低效。

一来，**书上学到的很多东西在现实中往往用不到太多**。许多html5原生的功能又丑又难写，又有同类的替代品，只是有时候又不得不用。~~像极了你养的老实人备胎。~~

二来，从书上学来的东西，**在没有足够练习的情况下太容易忘记了。**今天学了各种各样的label，他们有各种各样的attribute和格式。你以为你记住了，但用不了几天就会忘掉。在没有超出常人记忆力的情况下，你过过就不会写以前写过的project了，实属浪费时间。

综上所述，我决定尝试**Learning by doing。**然而即使如此也很难找到合适的对象。从头开始写一个复杂网站根本不是一个人能快速解决的事情。本网站的CSS就有超过六千行的代码，若是完全从头开始的话效率太低了。这种活还是交给专门的设计师比较方便，或者在网上找已有模板。

那该怎么办？最intuitive的解决方案就是~~抄袭~~借鉴并学习了。

Github上刚好找到了一个完美的实验对象：[**Hux Blog**](https://github.com/Huxpro/huxpro.github.io)

Hux本人是一个技术大牛，而这个project则是他在另一个大牛的网站模板上做修改的：[**Clean Blog**](https://github.com/StartBootstrap/startbootstrap-clean-blog-jekyll)
<br>(内心os：原来大家的轮子都是n手货)

总之，在巨人的肩膀上练习的成本低了太多，而获得的成就感又高了太多。我想可能这才是学习技术的正确途径。


**2. 表达自我的渠道**

众所周知我不爱发朋友圈。本人的分享欲望实在是太低了，有什么想说的一般会找熟悉的人私聊。
除此之外，私聊以及朋友圈占用的是公共资源。这里并不适合长篇大论。微信公众号是个subsitude，但界面实在是丑。我自己平时都不读公众号，自然没有动笔的欲望。

于是blog的解决方案正中下怀。既能练习编程技术，又能碎碎念。不会有太多人关注之余，给了想要了解我的人更多机会。
<br>国民安乐，岂不美哉！(手动GIF)


综上所述，开通blog是最符合需求的选项。

<p id = "build"></p>

## 技术实现 (找坑/填坑/~~shamelessly copy~~)

接下来说说搭建这个博客的技术细节。  

本blog使用了 [GitHub Pages](https://pages.github.com/) + [Jekyll](http://jekyllrb.com/) 以及Bootstrap定制的CSS，使得网站搭建异常容易。

Hux本人列出了许多优点：

> * **Markdown** 带来的优雅写作体验
> * 非常熟悉的 Git workflow ，**Git Commit 即 Blog Post**
> * 利用 GitHub Pages 的域名和免费无限空间，不用自己折腾主机
> * 如果需要自定义域名，也只需要简单改改 DNS 加个 CNAME 就好了 
> * Jekyll 的自定制非常容易，基本就是个模版引擎



而我在学习/修改的过程中也确实感到十分便利。

Setup非常直观。
<br>从Git上clone一下repo，然后在terminal输入几条指令即可在local host上看到网站的样子，并且支持实时修改。
从读不懂架构到搞清楚所有file都干了什么，基本只要读一下[**Jekyll official documentation**](https://jekyllrb.com/docs/)便能掌握。

掌握了基础操作方法之后就可以尽情魔改了。我也经常乐于其中无法自拔。很容易让人忘记时间的流逝。

---

之后便是漫长的**码字/做图**阶段。虽然有**Markdown**的支持，写文章仍旧是最耗时间的部分，这让我有种本末倒置的感觉。

不过更新还是要更的。毕竟blog也写了，不写post也太浪费域名。希望以后自己不要懒惰到把这个项目搁置吧。


## 后记

回顾这个博客的诞生，还是有诸多反思的。

可能是因为父母完全不管我学习的缘故，高中时期的我并不知道学计算机，到底是该学啥，很迷惘。连前后端都不知道是啥，更不知道怎么找教授做research。我只知道算法和竞赛。(小镇做题家实锤)(笑 <br>
当时主要是觉得算法竞赛正反馈来得很快，容易上头。打比赛很刺激，做题ac了之后特别有成就感，掌握复杂的算法让自己觉得很pro。

若是父母从事IT行业，或是有认识走在正道上的同学、朋友，恐怕我会更早的进入正道吧。

倒不是说学习算法不好，只是现在回顾，感觉自己花了很多时间在不值得花那么多时间的地方。以功利的角度去看，打算法竞赛最大的好处就是日后能花更少的时间在大厂的面试题上。工作中若是真的需要复杂的算法，直接小手一抖，网上copy一下即可。

因此，我希望未来的自己去多学习一些对现实世界有更多影响的东西。<br>
成为一个实干者，一个[**Realpolitik**](https://en.wikipedia.org/wiki/Realpolitik)。

—— Vincent 后记于 2020/11/24


